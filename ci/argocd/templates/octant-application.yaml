apiVersion: v1
kind: Namespace
metadata:
  name: $DEPLOYMENT_ID
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: $DEPLOYMENT_ID
  namespace: argocd
spec:
  project: octant
  destination:
    name: in-cluster
    namespace: $DEPLOYMENT_ID
  sources:
    - repoURL: 'https://gitlab.com/api/v4/projects/48137258/packages/helm/devel'
      targetRevision: 0.2.68
      chart: octant
      helm:
        parameters:
          # From gitlab-ci.yml
          - name: 'image.tag'
            value: '$IMAGE_TAG'
          ## Client
          - name: webClient.replicas
            value: '${WEB_CLIENT_REPLICAS:-1}'
          - name: 'webClient.alchemyId'
            value: '$VITE_ALCHEMY_ID'
          - name: 'webClient.jsonRpcEndpoint'
            value: '$FRONTEND_RPC_URL'
          - name: 'webClient.viteNetwork'
            value: '$NETWORK_NAME'
          - name: 'webClient.hideCurrentProjectsOutsideAW'
            value: 'false'
          - name: 'webClient.ipfsGateways'
            value: '$IPFS_GATEWAYS'
          - name: 'webClient.safeEndpoint'
            value: 'https://safe-transaction-sepolia.safe.global/'
          ## Graph Node
          - name: graphNode.graph.env.NETWORK
            value: '$NETWORK_NAME'
          - name: graphNode.graph.env.RPC_URL
            value: '$BACKEND_RPC_URL'
          - name: graphNode.graph.env.ETHEREUM_REORG_THRESHOLD
            value: '0'
          - name: graphHealtchecker.replicas
            value: '${GRAPH_HEALTHCHECKER_REPLICAS:-1}'
          - name: subgraph.deploy
            value: '$SUBGRAPH_DEPLOY'
          - name: graphHealtchecker.enabled
            value: '$GRAPH_HEALTCHECKER_ENABLED'
          ## Coin Prices Server
          - name: coinPricesServer.replicas
            value: '${COIN_PRICES_SERVER_REPLICAS:-2}'
          ## Backend
          - name: backendServer.replicas
            value: '${BACKEND_SERVER_REPLICAS:-3}'
          - name: backendPgsql.deploy
            value: '${BACKEND_SERVER_PGSQL:-true}'
          - name: 'backendServer.schedulerEnabled'
            value: '$SCHEDULER_ENABLED'
          - name: 'backendServer.vaultConfirmWithdrawals'
            value: '$VAULT_CONFIRM_WITHDRAWALS_ENABLED'
          - name: 'backendServer.glmClaim.senderNonce'
            value: '$GLM_SENDER_NONCE'
          - name: 'backendServer.glmClaim.enabled'
            value: '$GLM_CLAIM_ENABLED'
          - name: 'backendServer.snapshotter.enabled'
            value: '$SNAPSHOTTER_ENABLED'
          - name: 'backendServer.multisigger.enabled'
            value: '$MULTISIGGER_ENABLED'
          - name: 'backendServer.rpcUrl'
            value: '$BACKEND_RPC_URL'
          - name: 'backendServer.mainnetProposalCids'
            value: '$MAINNET_PROPOSAL_CIDS'
          # Hardcoded in this file
          - name: 'ingress.tlsToReplicate.enable'
            value: 'true'
          - name: 'secureIngress'
            value: 'false'
          # From Deploy contracts job
          - name: contracts.network
            value: '$NETWORK_NAME'
          - name: contracts.network_id
            value: '$NETWORK_ID'
          - name: contracts.addresses.startBlock
            value: '$BLOCK_NUMBER'
          - name: contracts.addresses.auth
            value: '$AUTH_CONTRACT_ADDRESS'
          - name: contracts.addresses.deposits
            value: '$DEPOSITS_CONTRACT_ADDRESS'
          - name: contracts.addresses.epochs
            value: '$EPOCHS_CONTRACT_ADDRESS'
          - name: contracts.addresses.proposals
            value: '$PROPOSALS_CONTRACT_ADDRESS'
          - name: contracts.addresses.vault
            value: '$VAULT_CONTRACT_ADDRESS'
          - name: contracts.addresses.withdrawals_target
            value: '$WITHDRAWALS_TARGET_CONTRACT_ADDRESS'
          - name: contracts.addresses.glm
            value: '$GLM_CONTRACT_ADDRESS'
          # Ingress controller
          - name: ingress.cloudflareProxied.backend-server
            value: 'true'
          - name: ingress.cloudflareProxied.web-client
            value: 'true'
          - name: ingress.cloudflareProxied.coin-server
            value: 'true'
          - name: ingress.cloudflareProxied.graph-node
            value: 'true'
          - name: ingress.cloudflareProxied.graph-ipfs
            value: 'true'
          # APITests / Multideployer
          - name: multideployer.enabled
            value: '$MULTIDEPLOYER_ENABLED'
    - repoURL: 'https://gitlab.com/api/v4/projects/48137258/packages/helm/devel'
      targetRevision: 0.0.11
      chart: octant-anvil
      helm:
        parameters:
          - name: 'anvil.block_time'
            value: '${ANVIL_BLOCK_TIME:-5}'
          - name: 'anvil.hardfork'
            value: 'latest'
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - RespectIgnoreDifferences=true
  ignoreDifferences:
    - group: 'batch'
      kind: 'Job'
      jsonPointers:
        - /metadata/annotations
        - /spec/template/metadata
        - /spec/template/labels
    - group: ''
      kind: 'Secret'
      jsonPointers:
        - /data
